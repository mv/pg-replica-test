# 2025-06-11   ferreira.mv
#   - use 'python' most recent version
#   - run 'test' suit to check if compatible
#   - CMD '/bin/bash' for troubleshootin
#

# FROM pg-17:latest
FROM alpine:3.22

# alpine env
RUN apk add bash shadow gosu vim
COPY docker/etc.bash-extra.sh  /etc/bash/bash-extra.sh
COPY docker/etc.vimrc.local    /etc/vim/vimrc.local

# Postgres 17
ENV PGDATA="/var/lib/postgresql"
RUN apk add postgresql17 postgresql17-client
RUN mkdir -p /run/postgresql && chown postgres:postgres /run/postgresql
RUN chsh -s /bin/bash postgres

# Test: show console output
# (obs: adds 38.3M to img)  TODO:remove later
RUN gosu postgres initdb

# ALTER: client connections
RUN echo "# Dev connections: md5/passwords"         >> /var/lib/postgresql/pg_hba.conf
RUN echo "# type  db   user src_addr        method" >> /var/lib/postgresql/pg_hba.conf
RUN echo "host    all  all  192.168.0.0/16  md5"    >> /var/lib/postgresql/pg_hba.conf
RUN echo "host    all  all  172.16.0.0/12   md5"    >> /var/lib/postgresql/pg_hba.conf

# ALTER: listen all
RUN echo "listen_addresses = '*'" >> /var/lib/postgresql/postgresql.conf
RUN gosu postgres pg_ctl start

# wait for db start
RUN sleep 30
# ALTER: use password via remote connections
RUN psql -U postgres -c 'ALTER USER postgres password "pg";'

# EXTRA: test user
RUN psql -U postgres -c 'CREATE USER tst password "tst";'


EXPOSE 5432
#VOLUME ["/var/lib/postgresql"]


#ENTRYPOINT [ "/usr/bin/gosu","postgres","/bin/bash" ]
#ENTRYPOINT [ "/bin/sh" ]
#ENTRYPOINT [ "/bin/bash" ]
#CMD [ "-h" ]
