# 2025-06-11   ferreira.mv
#   - use 'python' most recent version
#   - run 'test' suit to check if compatible
#   - CMD '/bin/bash' for troubleshootin
#

# FROM pg-17:latest
FROM alpine:3.22

# alpine env
RUN  apk add bash shadow gosu vim
COPY docker/etc.bash-extra.sh  /etc/bash/bash-extra.sh
COPY docker/etc.vimrc.local    /etc/vim/vimrc.local

# Postgres 17
ENV PGDATA="/var/lib/postgresql"
RUN apk add postgresql17 postgresql17-client
RUN mkdir -p /run/postgresql && chown postgres:postgres /run/postgresql
RUN chsh  -s /bin/bash postgres

# Obs:
#   initdb will generate a first 'postgresql.conf' and other configs
RUN gosu postgres initdb --auth=trust

RUN cat <<EOF >> /var/lib/postgresql/postgresql.conf

# Mv: Only one of the following will be present in runtime
include_if_exists '/var/lib/postgresql/pg-replication-primary.conf'
include_if_exists '/var/lib/postgresql/pg-replication-replica.conf'

EOF

# ALTER: client connections
RUN cat <<EOF >> /var/lib/postgresql/pg_hba.conf

# Mv
include_if_exists /var/lib/postgresql/pg-hba-extras.conf

EOF

RUN cat <<EOF >> /var/lib/postgresql/pg-hba-extras.conf
# First boot: TRUST: for automation
# Desired: connections using md5/passwords in all future automations

# type  db   user src:addr/network method
host    all  all  192.168.0.0/16   trust
host    all  all  172.16.0.0/12    trust

EOF

# WAL archive destination
RUN mkdir -p /mnt/archive && chown -R postgres:postgres /mnt/archive

EXPOSE 5432


ENTRYPOINT [ "/usr/bin/gosu","postgres","postgres"]

#ENTRYPOINT [ "/bin/bash" ]
#ENTRYPOINT [ "/bin/sh" ]

